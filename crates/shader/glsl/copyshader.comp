#version 460

#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_nonuniform_qualifier : require

#include "shared.glsl"

#define BOUNDS 20.0f

struct BufTyOne{
    float a;
    float b;
    vec2 pad;
};

struct BufTyTwo{
    uvec4 new;
    float a;
    float b;
    vec2 pad;
};

//push constants block
layout( push_constant ) uniform constants{
    ResHandle src;
    ResHandle dst;
    uint size;
    uint pad;
} Push;

layout(set = 0, binding = 0) buffer BufA{
    uint data[];
} global_one[];
layout(set = 0, binding = 0) buffer BufB{
    uint data[];
} global_two[];


layout (local_size_x = 64, local_size_y = 1, local_size_z = 1) in;
void main(){
  uint widx = gl_GlobalInvocationID.x;


  if (widx >= Push.size){
      return;
  }

  //Copy
  global_two[nonuniformEXT(get_index(Push.dst))].data[widx] = global_one[nonuniformEXT(get_index(Push.src))].data[widx];
}
